{"version":3,"file":"actor.modern.js","sources":["../src/mailbox/index.js","../src/index.js"],"sourcesContent":["export const mailbox = () => {\n  const queue = []\n  var next\n\n  return {\n    async deliver(msg) {\n      queue.push(msg)\n      if (next) {\n        next(queue.shift())\n        next = undefined\n      }\n    },\n\n    receive() {\n      return new Promise(function innerReceive(resolve) {\n        const msg = queue.shift()\n        if (msg) return resolve(msg)\n        next = resolve\n      })\n    },\n  }\n}\n","import {mailbox as createMailbox} from \"./mailbox\"\nimport queueMicrotask from \"queue-microtask\"\n\nexport const INIT = \"INIT\"\nexport const SUBSCRIBE = \"SUBSCRIBE\"\nexport const UNSUBSCRIBE = \"UNSUBSCRIBE\"\nexport const UPDATED = \"UPDATED\"\nexport const SNAPSHOT = \"SNAPSHOT\"\nexport const EXIT = \"EXIT\"\nexport const TERMINATE = \"TERMINATE\"\n\nconst root =\n  (typeof self === \"object\" && self.self === self && self) ||\n  (typeof global === \"object\" && global.global === global && global) ||\n  (typeof window === \"object\" && window.window === window && window)\n\nroot.FCL_REGISTRY = root.FCL_REGISTRY == null ? {} : root.FCL_REGISTRY\nvar pid = 0b0\n\nconst DEFAULT_TIMEOUT = 5000\nconst DEFAULT_TAG = \"---\"\nexport const send = (addr, tag, data, opts = {}) =>\n  new Promise((reply, reject) => {\n    const expectReply = opts.expectReply || false\n    const timeout = opts.timeout != null ? opts.timeout : DEFAULT_TIMEOUT\n\n    if (expectReply && timeout) {\n      setTimeout(\n        () =>\n          reject(new Error(`Timeout: ${timeout}ms passed without a response.`)),\n        timeout\n      )\n    }\n\n    const payload = {\n      to: addr,\n      from: opts.from,\n      tag,\n      data,\n      timeout,\n      reply,\n      reject,\n    }\n\n    try {\n      root.FCL_REGISTRY[addr] &&\n        root.FCL_REGISTRY[addr].mailbox.deliver(payload)\n      if (!expectReply) reply(true)\n    } catch (error) {\n      console.error(\n        \"FCL.Actor -- Could Not Deliver Message\",\n        payload,\n        root.FCL_REGISTRY[addr],\n        error\n      )\n    }\n  })\n\nexport const kill = addr => {\n  delete root.FCL_REGISTRY[addr]\n}\n\nconst fromHandlers = (handlers = {}) => async ctx => {\n  if (typeof handlers[INIT] === \"function\") await handlers[INIT](ctx)\n  __loop: while (1) {\n    const letter = await ctx.receive()\n    try {\n      if (letter.tag === EXIT) {\n        if (typeof handlers[TERMINATE] === \"function\") {\n          await handlers[TERMINATE](ctx, letter, letter.data || {})\n        }\n        break __loop\n      }\n      await handlers[letter.tag](ctx, letter, letter.data || {})\n    } catch (error) {\n      console.error(`${ctx.self()} Error`, letter, error)\n    } finally {\n      continue __loop\n    }\n  }\n}\n\nexport const spawn = (fn, addr = null) => {\n  if (addr == null) addr = ++pid\n  if (root.FCL_REGISTRY[addr] != null) return addr\n\n  root.FCL_REGISTRY[addr] = {\n    addr,\n    mailbox: createMailbox(),\n    subs: new Set(),\n    kvs: {},\n  }\n\n  const ctx = {\n    self: () => addr,\n    receive: () => root.FCL_REGISTRY[addr].mailbox.receive(),\n    send: (to, tag, data, opts = {}) => {\n      opts.from = addr\n      return send(to, tag, data, opts)\n    },\n    sendSelf: (tag, data, opts) => {\n      if (root.FCL_REGISTRY[addr]) send(addr, tag, data, opts)\n    },\n    broadcast: (tag, data, opts = {}) => {\n      opts.from = addr\n      for (let to of root.FCL_REGISTRY[addr].subs) send(to, tag, data, opts)\n    },\n    subscribe: sub => sub != null && root.FCL_REGISTRY[addr].subs.add(sub),\n    unsubscribe: sub => sub != null && root.FCL_REGISTRY[addr].subs.delete(sub),\n    subscriberCount: () => root.FCL_REGISTRY[addr].subs.size,\n    hasSubs: () => !!root.FCL_REGISTRY[addr].subs.size,\n    put: (key, value) => {\n      if (key != null) root.FCL_REGISTRY[addr].kvs[key] = value\n    },\n    get: (key, fallback) => {\n      const value = root.FCL_REGISTRY[addr].kvs[key]\n      return value == null ? fallback : value\n    },\n    delete: key => {\n      delete root.FCL_REGISTRY[addr].kvs[key]\n    },\n    update: (key, fn) => {\n      if (key != null)\n        root.FCL_REGISTRY[addr].kvs[key] = fn(root.FCL_REGISTRY[addr].kvs[key])\n    },\n    keys: () => {\n      return Object.keys(root.FCL_REGISTRY[addr].kvs)\n    },\n    all: () => {\n      return root.FCL_REGISTRY[addr].kvs\n    },\n    where: pattern => {\n      return Object.keys(root.FCL_REGISTRY[addr].kvs).reduce((acc, key) => {\n        return pattern.test(key)\n          ? {...acc, [key]: root.FCL_REGISTRY[addr].kvs[key]}\n          : acc\n      }, {})\n    },\n    merge: (data = {}) => {\n      Object.keys(data).forEach(\n        key => (root.FCL_REGISTRY[addr].kvs[key] = data[key])\n      )\n    },\n  }\n\n  if (typeof fn === \"object\") fn = fromHandlers(fn)\n\n  queueMicrotask(async () => {\n    await fn(ctx)\n    kill(addr)\n  })\n\n  return addr\n}\n\n// Returns an unsubscribe function\n// A SUBSCRIBE handler will need to be created to handle the subscription event\n//\n//  [SUBSCRIBE]: (ctx, letter) => {\n//    ctx.subscribe(letter.from)\n//    ctx.send(letter.from, UPDATED, ctx.all())\n//  }\n//\nexport function subscriber(address, spawnFn, callback) {\n  spawnFn(address)\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(address, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(address, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\n// Returns a promise that returns a result\n// A SNAPSHOT handler will need to be created to handle the snapshot event\n//\n//  [SNAPSHOT]: (ctx, letter) => {\n//    letter.reply(ctx.all())\n//  }\n//\nexport function snapshoter(address, spawnFn) {\n  spawnFn(address)\n  return send(address, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n"],"names":["mailbox","queue","next","deliver","msg","push","shift","undefined","receive","Promise","innerReceive","resolve","INIT","SUBSCRIBE","UNSUBSCRIBE","UPDATED","SNAPSHOT","EXIT","TERMINATE","root","self","global","window","FCL_REGISTRY","pid","DEFAULT_TIMEOUT","send","addr","tag","data","opts","reply","reject","expectReply","timeout","setTimeout","Error","payload","to","from","error","console","kill","fromHandlers","handlers","ctx","__loop","letter","spawn","fn","createMailbox","subs","Set","kvs","sendSelf","broadcast","subscribe","sub","add","unsubscribe","delete","subscriberCount","size","hasSubs","put","key","value","get","fallback","update","keys","Object","all","where","pattern","reduce","acc","test","merge","forEach","queueMicrotask","subscriber","address","spawnFn","callback","snapshoter"],"mappings":"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"}
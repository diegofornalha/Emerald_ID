function _catch(body, recover) {
  try {
    var result = body();
  } catch (e) {
    return recover(e);
  }

  if (result && result.then) {
    return result.then(void 0, recover);
  }

  return result;
}

var getNodeHttpModules = function getNodeHttpModules() {
  try {
    var _temp5 = function _temp5() {
      function _temp2() {
        return {
          nodeHttpsTransport: nodeHttpsTransport,
          nodeHttpTransport: nodeHttpTransport
        };
      }

      var nodeHttpTransport;

      var _temp = _catch(function () {
        return Promise.resolve(import('http')["catch"](function (e) {
          return null;
        })).then(function (_import$catch2) {
          nodeHttpTransport = _import$catch2;
        });
      }, function () {});

      return _temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp);
    };

    var nodeHttpsTransport;

    var _temp6 = _catch(function () {
      return Promise.resolve(import('https')["catch"](function (e) {
        return null;
      })).then(function (_import$catch) {
        nodeHttpsTransport = _import$catch;
      });
    }, function () {});

    return Promise.resolve(_temp6 && _temp6.then ? _temp6.then(_temp5) : _temp5(_temp6));
  } catch (e) {
    return Promise.reject(e);
  }
};

export { getNodeHttpModules };
//# sourceMappingURL=util-node-http-modules.module.esm.js.map

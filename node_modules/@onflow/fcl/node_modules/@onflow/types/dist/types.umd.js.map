{"version":3,"file":"types.umd.js","sources":["../src/types.js"],"sourcesContent":["const type = (label, asArgument, asInjection) => ({\n  label,\n  asArgument,\n  asInjection,\n})\n\nconst isArray = (d) => Array.isArray(d)\nconst isObj = (d) => typeof d === \"object\"\nconst isNull = (d) => d == null\nconst isBoolean = (d) => typeof d === \"boolean\"\nconst isNumber = (d) => typeof d === \"number\"\nconst isInteger = (d) => Number.isInteger(d)\nconst isString = (d) => typeof d === \"string\"\n\nconst throwTypeError = (msg) => {\n  throw new Error(\"Type Error: \" + msg)\n}\n\nconst numberValuesDeprecationNotice = (type) => {\n  console.error(\n    `\n          %c@onflow/types Deprecation Notice\n          ========================\n\n          Passing in Number as value for ${type} is deprecated and will cease to work in future releases of @onflow/types.\n          Going forward, use String as value for ${type}. \n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/types/WARNINGS.md#0002-[U]Int*-and-Word*-as-Number\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport const Identity = type(\n  \"Identity\",\n  (v) => v,\n  (v) => v\n)\n\nexport const UInt = type(\n  \"UInt\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"UInt\")\n      return {\n        type: \"UInt\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"UInt\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected Positive Integer for type Unsigned Int\")\n  },\n  (v) => v\n)\n\nexport const Int = type(\n  \"Int\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"Int\")\n      return {\n        type: \"Int\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"Int\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected Integer for type Int\")\n  },\n  (v) => v\n)\n\nexport const UInt8 = type(\n  \"UInt8\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"UInt8\")\n      return {\n        type: \"UInt8\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"UInt8\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected integer for UInt8\")\n  },\n  (v) => v\n)\n\nexport const Int8 = type(\n  \"Int8\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"Int8\")\n      return {\n        type: \"Int8\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"Int8\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected positive integer for Int8\")\n  },\n  (v) => v\n)\n\nexport const UInt16 = type(\n  \"UInt16\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"UInt16\")\n      return {\n        type: \"UInt16\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"UInt16\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected integer for UInt16\")\n  },\n  (v) => v\n)\n\nexport const Int16 = type(\n  \"Int16\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"Int16\")\n      return {\n        type: \"Int16\",\n        value: v.toString(),\n      }\n    } \n    if (isString(v)) {\n      return {\n        type: \"Int16\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected positive integer for Int16\")\n  },\n  (v) => v\n)\n\nexport const UInt32 = type(\n  \"UInt32\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"UInt32\")\n      return {\n        type: \"UInt32\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"UInt32\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected integer for UInt32\")\n  },\n  (v) => v\n)\n\nexport const Int32 = type(\n  \"Int32\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"Int32\")\n      return {\n        type: \"Int32\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"Int32\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected positive integer for Int32\")\n  },\n  (v) => v\n)\n\nexport const UInt64 = type(\n  \"UInt64\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"UInt64\")\n      return {\n        type: \"UInt64\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"UInt64\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected integer for UInt64\")\n  },\n  (v) => v\n)\n\nexport const Int64 = type(\n  \"Int64\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"Int64\")\n      return {\n        type: \"Int64\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"Int64\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected positive integer for Int64\")\n  },\n  (v) => v\n)\n\nexport const UInt128 = type(\n  \"UInt128\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"UInt128\")\n      return {\n        type: \"UInt128\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"UInt128\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected integer for UInt128\")\n  },\n  (v) => v\n)\n\nexport const Int128 = type(\n  \"Int128\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"Int128\")\n      return {\n        type: \"Int128\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"Int128\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected positive integer for Int128\")\n  },\n  (v) => v\n)\n\nexport const UInt256 = type(\n  \"UInt256\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"UInt256\")\n      return {\n        type: \"UInt256\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"UInt256\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected integer for UInt256\")\n  },\n  (v) => v\n)\n\nexport const Int256 = type(\n  \"Int256\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"Int256\")\n      return {\n        type: \"Int256\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"Int256\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected integer for Int256\")\n  },\n  (v) => v\n)\n\nexport const Word8 = type(\n  \"Word8\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"Word8\")\n      return {\n        type: \"Word8\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"Word8\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected positive number for Word8\")\n  },\n  (v) => v\n)\n\nexport const Word16 = type(\n  \"Word16\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"Word16\")\n      return {\n        type: \"Word16\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"Word16\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected positive number for Word16\")\n  },\n  (v) => v\n)\n\nexport const Word32 = type(\n  \"Word32\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"Word32\")\n      return {\n        type: \"Word32\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"Word32\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected positive number for Word32\")\n  },\n  (v) => v\n)\n\nexport const Word64 = type(\n  \"Word64\",\n  (v) => {\n    if (isNumber(v) && isInteger(v)) {\n      numberValuesDeprecationNotice(\"Word64\")\n      return {\n        type: \"Word64\",\n        value: v.toString(),\n      }\n    }\n    if (isString(v)) {\n      return {\n        type: \"Word64\",\n        value: v\n      }\n    }\n    throwTypeError(\"Expected positive number for Word64\")\n  },\n  (v) => v\n)\n\nconst UFix64AndFix64NumberDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/types Deprecation Notice\n          ========================\n\n          Passing in Numbers as values for Fix64 and UFix64 types is deprecated and will cease to work in future releases of @onflow/types.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/types/WARNINGS.md#0001-[U]Fix64-as-Number\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport const UFix64 = type(\n  \"UFix64\",\n  (v) => {\n    if (isString(v)) {\n      const vParts = v.split(\".\")\n      if (vParts.length !== 2) {\n        throwTypeError(`Expected one decimal but found ${vParts.length} in the [U]Fix64 value. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers`)\n      }\n      if (vParts[1].length == 0 || vParts[1].length > 8) {\n        throwTypeError(`Expected at least one digit, and at most 8 digits following the decimal of the [U]Fix64 value but found ${vParts[1].length} digits. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers`)\n      }\n\n      return {\n        type: \"UFix64\",\n        value: v\n      }\n    } else if (isNumber(v)) {\n      UFix64AndFix64NumberDeprecationNotice()\n      return {\n        type: \"UFix64\",\n        value: v.toString()\n      }\n    }\n    throwTypeError(\"Expected String for UFix64\")\n  },\n  (v) => v\n)\n\nexport const Fix64 = type(\n  \"Fix64\",\n  (v) => {\n    if (isString(v)) {\n      const vParts = v.split(\".\")\n      if (vParts.length !== 2) {\n        throwTypeError(`Expected one decimal but found ${vParts.length} in the [U]Fix64 value. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers`)\n      }\n      if (vParts[1].length == 0 || vParts[1].length > 8) {\n        throwTypeError(`Expected at least one digit, and at most 8 digits following the decimal of the [U]Fix64 value but found ${vParts[1].length} digits. Find out more about [U]Fix64 types here: https://docs.onflow.org/cadence/json-cadence-spec/#fixed-point-numbers`)\n      }\n      \n      return {\n        type: \"Fix64\",\n        value: v\n      }\n    } else if (isNumber(v)) {\n      UFix64AndFix64NumberDeprecationNotice()\n      return {\n        type: \"Fix64\",\n        value: v.toString()\n      }\n    }\n    throwTypeError(\"Expected String for Fix64\")\n  },\n  (v) => v\n)\n\nexport const String = type(\n  \"String\",\n  (v) => {\n    if (isString(v))\n      return {\n        type: \"String\",\n        value: v,\n      }\n    throwTypeError(\"Expected String for type String\")\n  },\n  (v) => v\n)\n\nexport const Character = type(\n  \"Character\",\n  (v) => {\n    if (isString(v))\n      return {\n        type: \"Character\",\n        value: v,\n      }\n    throwTypeError(\"Expected Character for type Character\")\n  },\n  (v) => v\n)\n\nexport const Bool = type(\n  \"Bool\",\n  (v) => {\n    if (isBoolean(v))\n      return {\n        type: \"Bool\",\n        value: v,\n      }\n    throwTypeError(\"Expected Boolean for type Bool\")\n  },\n  (v) => v\n)\n\nexport const Address = type(\n  \"Address\",\n  (v) => {\n    if (isString(v))\n      return {\n        type: \"Address\",\n        value: v,\n      }\n    throwTypeError(\"Expected Address for type Address\")\n  },\n  (v) => v\n)\n\nexport const Void = type(\n  \"Void\",\n  (v) => {\n    if (!v || isNull(v))\n      return {\n        type: \"Void\",\n      }\n    throwTypeError(\"Expected Void for type Void\")\n  },\n  (v) => v\n)\n\nexport const Optional = (children) =>\n  type(\n    \"Optional\",\n    (v) => ({\n      type: \"Optional\",\n      value: isNull(v) ? null : children.asArgument(v),\n    }),\n    (v) => v\n  )\n\nexport const Reference = type(\n  \"Reference\",\n  (v) => {\n    if (isObj(v))\n      return {\n        type: \"Reference\",\n        value: v,\n      }\n    throwTypeError(\"Expected Object for type Reference\")\n  },\n  (v) => v\n)\n\nexport const _Array = (children = []) =>\n  type(\n    \"Array\",\n    (v) => {\n      return {\n        type: \"Array\",\n        value: isArray(children)\n          ? children.map((c, i) => c.asArgument(v[i]))\n          : v.map((x) => children.asArgument(x)),\n      }\n    },\n    (v) => v\n  )\n\nexport {_Array as Array}\n\nexport const Dictionary = (children = []) =>\n  type(\n    \"Dictionary\",\n    (v) => {\n      if (isObj(v))\n        return {\n          type: \"Dictionary\",\n          value: isArray(children)\n            ? children.map((c, i) => ({\n                key: c.key.asArgument(v[i].key),\n                value: c.value.asArgument(v[i].value),\n              }))\n            : isArray(v)\n            ? v.map((x) => ({\n                key: children.key.asArgument(x.key),\n                value: children.value.asArgument(x.value),\n              }))\n            : [\n                {\n                  key: children.key.asArgument(v.key),\n                  value: children.value.asArgument(v.value),\n                },\n              ],\n        }\n      throwTypeError(\"Expected Object for type Dictionary\")\n    },\n    (v) => v\n  )\n\nexport const Event = (id, fields = []) =>\n  type(\n    \"Event\",\n    (v) => {\n      if (isObj(v))\n        return {\n          type: \"Event\",\n          value: {\n            id: id,\n            fields: isArray(fields)\n              ? fields.map((c, i) => ({\n                  name: v.fields[i].name,\n                  value: c.value.asArgument(v.fields[i].value),\n                }))\n              : v.fields.map((x) => ({\n                  name: x.name,\n                  value: fields.value.asArgument(x.value),\n                })),\n          },\n        }\n      throwTypeError(\"Expected Object for type Event\")\n    },\n    (v) => v\n  )\n\nexport const Resource = (id, fields = []) =>\n  type(\n    \"Resource\",\n    (v) => {\n      if (isObj(v))\n        return {\n          type: \"Resource\",\n          value: {\n            id: id,\n            fields: isArray(fields)\n              ? fields.map((c, i) => ({\n                  name: v.fields[i].name,\n                  value: c.value.asArgument(v.fields[i].value),\n                }))\n              : v.fields.map((x) => ({\n                  name: x.name,\n                  value: fields.value.asArgument(x.value),\n                })),\n          },\n        }\n      throwTypeError(\"Expected Object for type Resource\")\n    },\n    (v) => v\n  )\n\nexport const Struct = (id, fields = []) =>\n  type(\n    \"Struct\",\n    (v) => {\n      if (isObj(v))\n        return {\n          type: \"Struct\",\n          value: {\n            id: id,\n            fields: isArray(fields)\n              ? fields.map((c, i) => ({\n                  name: v.fields[i].name,\n                  value: c.value.asArgument(v.fields[i].value),\n                }))\n              : v.fields.map((x) => ({\n                  name: x.name,\n                  value: fields.value.asArgument(x.value),\n                })),\n          },\n        }\n      throwTypeError(\"Expected Object for type Struct\")\n    },\n    (v) => v\n  )\n\nexport const Path = type(\n    \"Path\",\n    (v) => {\n      if (isObj(v)) {\n        if (!isString(v.domain)) {\n          throwTypeError(`Expected a string for the Path domain but found ${v.domain}. Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path`)\n        }\n\n        if (!(v.domain === \"storage\" || v.domain === \"private\" || v.domain === \"public\")) {\n          throwTypeError(`Expected either \"storage\", \"private\" or \"public\" as the Path domain but found ${v.domain}. Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path`)\n        }\n\n        if (!isString(v.identifier)) {\n          throwTypeError(`Expected a string for the Path identifier but found ${v.identifier}. Find out more about the Path type here: https://docs.onflow.org/cadence/json-cadence-spec/#path`)\n        }\n\n        return {\n          type: \"Path\",\n          value: {\n            domain: v.domain,\n            identifier: v.identifier\n          },\n        }\n      }\n      throwTypeError(\"Expected Object for type Path\")\n    },\n    (v) => v\n  )\n"],"names":["type","label","asArgument","asInjection","isArray","d","Array","isObj","isNull","isBoolean","isNumber","isInteger","Number","isString","throwTypeError","msg","Error","numberValuesDeprecationNotice","console","error","replace","trim","Identity","v","UInt","value","toString","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64AndFix64NumberDeprecationNotice","UFix64","vParts","split","length","Fix64","String","Character","Bool","Address","Void","Optional","children","Reference","_Array","map","c","i","x","Dictionary","key","Event","id","fields","name","Resource","Struct","Path","domain","identifier"],"mappings":"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"}